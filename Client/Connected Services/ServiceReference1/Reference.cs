//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Runtime Version:4.0.30319.42000
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace Client.ServiceReference1 {
    using System.Runtime.Serialization;
    using System;
    
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="Flight", Namespace="http://schemas.datacontract.org/2004/07/FlightsWCFForExam")]
    [System.SerializableAttribute()]
    public partial class Flight : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.DateTime ArrivalField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.DateTime DepartureField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string LocationFromField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string LocationToField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int NumberField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string TypeField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.DateTime Arrival {
            get {
                return this.ArrivalField;
            }
            set {
                if ((this.ArrivalField.Equals(value) != true)) {
                    this.ArrivalField = value;
                    this.RaisePropertyChanged("Arrival");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.DateTime Departure {
            get {
                return this.DepartureField;
            }
            set {
                if ((this.DepartureField.Equals(value) != true)) {
                    this.DepartureField = value;
                    this.RaisePropertyChanged("Departure");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string LocationFrom {
            get {
                return this.LocationFromField;
            }
            set {
                if ((object.ReferenceEquals(this.LocationFromField, value) != true)) {
                    this.LocationFromField = value;
                    this.RaisePropertyChanged("LocationFrom");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string LocationTo {
            get {
                return this.LocationToField;
            }
            set {
                if ((object.ReferenceEquals(this.LocationToField, value) != true)) {
                    this.LocationToField = value;
                    this.RaisePropertyChanged("LocationTo");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int Number {
            get {
                return this.NumberField;
            }
            set {
                if ((this.NumberField.Equals(value) != true)) {
                    this.NumberField = value;
                    this.RaisePropertyChanged("Number");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Type {
            get {
                return this.TypeField;
            }
            set {
                if ((object.ReferenceEquals(this.TypeField, value) != true)) {
                    this.TypeField = value;
                    this.RaisePropertyChanged("Type");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ServiceModel.ServiceContractAttribute(ConfigurationName="ServiceReference1.IService1")]
    public interface IService1 {
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService1/AllFlights", ReplyAction="http://tempuri.org/IService1/AllFlightsResponse")]
        Client.ServiceReference1.Flight[] AllFlights();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService1/AllFlights", ReplyAction="http://tempuri.org/IService1/AllFlightsResponse")]
        System.Threading.Tasks.Task<Client.ServiceReference1.Flight[]> AllFlightsAsync();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService1/FindFlightByNR", ReplyAction="http://tempuri.org/IService1/FindFlightByNRResponse")]
        Client.ServiceReference1.Flight FindFlightByNR(int number);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService1/FindFlightByNR", ReplyAction="http://tempuri.org/IService1/FindFlightByNRResponse")]
        System.Threading.Tasks.Task<Client.ServiceReference1.Flight> FindFlightByNRAsync(int number);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService1/ChangeFlights", ReplyAction="http://tempuri.org/IService1/ChangeFlightsResponse")]
        string ChangeFlights(int number, string type, string locationFrom, string locationTo, System.DateTime departure, System.DateTime arrival);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService1/ChangeFlights", ReplyAction="http://tempuri.org/IService1/ChangeFlightsResponse")]
        System.Threading.Tasks.Task<string> ChangeFlightsAsync(int number, string type, string locationFrom, string locationTo, System.DateTime departure, System.DateTime arrival);
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public interface IService1Channel : Client.ServiceReference1.IService1, System.ServiceModel.IClientChannel {
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class Service1Client : System.ServiceModel.ClientBase<Client.ServiceReference1.IService1>, Client.ServiceReference1.IService1 {
        
        public Service1Client() {
        }
        
        public Service1Client(string endpointConfigurationName) : 
                base(endpointConfigurationName) {
        }
        
        public Service1Client(string endpointConfigurationName, string remoteAddress) : 
                base(endpointConfigurationName, remoteAddress) {
        }
        
        public Service1Client(string endpointConfigurationName, System.ServiceModel.EndpointAddress remoteAddress) : 
                base(endpointConfigurationName, remoteAddress) {
        }
        
        public Service1Client(System.ServiceModel.Channels.Binding binding, System.ServiceModel.EndpointAddress remoteAddress) : 
                base(binding, remoteAddress) {
        }
        
        public Client.ServiceReference1.Flight[] AllFlights() {
            return base.Channel.AllFlights();
        }
        
        public System.Threading.Tasks.Task<Client.ServiceReference1.Flight[]> AllFlightsAsync() {
            return base.Channel.AllFlightsAsync();
        }
        
        public Client.ServiceReference1.Flight FindFlightByNR(int number) {
            return base.Channel.FindFlightByNR(number);
        }
        
        public System.Threading.Tasks.Task<Client.ServiceReference1.Flight> FindFlightByNRAsync(int number) {
            return base.Channel.FindFlightByNRAsync(number);
        }
        
        public string ChangeFlights(int number, string type, string locationFrom, string locationTo, System.DateTime departure, System.DateTime arrival) {
            return base.Channel.ChangeFlights(number, type, locationFrom, locationTo, departure, arrival);
        }
        
        public System.Threading.Tasks.Task<string> ChangeFlightsAsync(int number, string type, string locationFrom, string locationTo, System.DateTime departure, System.DateTime arrival) {
            return base.Channel.ChangeFlightsAsync(number, type, locationFrom, locationTo, departure, arrival);
        }
    }
}
